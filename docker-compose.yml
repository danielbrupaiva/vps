services:
  bootoolz-api:
    build:
      context: ./bootoolz-api
      dockerfile: Dockerfile
    container_name: spring-boot
    env_file:
      - .env
    volumes:
      - ./bootoolz-api:/api
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - vps
    tty: true
    stdin_open: true

  nginx-reverse-proxy:
    build:
      context: ./nginx-reverse-proxy
      dockerfile: Dockerfile
    container_name: nginx-reverse-proxy
    depends_on:
      - bootoolz-api
    env_file:
      - .env  
    volumes:
      - ./nginx-reverse-proxy/entrypoint.sh:/entrypoint.sh:ro
      - ./nginx-reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-reverse-proxy/scripts/:/scripts/:ro
      - ./nginx-reverse-proxy/conf.d/:/etc/nginx/conf.d/
      - ./nginx-reverse-proxy/templates/default.conf.template:/etc/nginx/templates/default.conf.template:ro
      - ./nginx-reverse-proxy/templates/${PUBLIC_HOSTNAME}.template:/etc/nginx/templates/${PUBLIC_HOSTNAME}.template:ro
      - ./nginx-reverse-proxy/certbot/conf:/etc/letsencrypt
      - ./nginx-reverse-proxy/certbot/www:/var/www/certbot
    networks:
      - vps
    ports:
      - "80:80"
      - "443:443"
    entrypoint: ["/entrypoint.sh"]     
    #entrypoint: ["/bin/sh", "-c", "tail -f /dev/null"] 
    restart: no
    tty: true
    stdin_open: true

#  certbot:
#    image: certbot/certbot:latest
#    container_name: certbot
#    env_file:
#      - .env  
#    volumes:
#      - ./certbot/entrypoint.sh:/entrypoint.sh
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot
#      - /var/run/docker.sock:/var/run/docker.sock
#    #entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $${!}; certbot renew; done'"
#    entrypoint: ["/entrypoint.sh"]
#
networks:
  vps:
    driver: bridge
