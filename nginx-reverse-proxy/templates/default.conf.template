server {
    listen       80;                                        # Listen on IPv4 port 80
    listen  [::]:80;                                        # Listen on IPv6 port 80
    server_name  bootoolz.com www.bootoolz.com;   # Define the domains

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen       443 ssl;
    listen  [::]:443 ssl;
    server_name  ${PUBLIC_HOSTNAME} www.${PUBLIC_HOSTNAME};  
    
    #ssl_certificate     /etc/ssl/certs/${PUBLIC_HOSTNAME}.crt;
    #ssl_certificate_key /etc/ssl/private/${PUBLIC_HOSTNAME}.key;
    
    ssl_certificate             /etc/letsencrypt/live/${PUBLIC_HOSTNAME}/fullchain.pem;
    ssl_certificate_key         /etc/letsencrypt/live/${PUBLIC_HOSTNAME}/privkey.pem;
    ssl_trusted_certificate     /etc/letsencrypt/live/${PUBLIC_HOSTNAME}/chain.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    location / {
        proxy_pass http://${API_NAME}-api:${API_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    location /static/ {
        alias /var/www/certbot;
    }
}